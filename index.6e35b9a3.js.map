{"mappings":"AAAA,IAAMA,QAAU,qCACVC,SAAW,2BACbC,YAAc,EACdC,aAAe,GAEbC,WAAaC,SAASC,eAAe,eACrCC,QAAUF,SAASG,cAAc,YACjCC,eAAiBJ,SAASG,cAAc,cAK9C,SAASE,SAASC,GAChBA,EAAMC,iBACNT,aAAeQ,EAAME,OAAOC,SAASC,YAAYC,MAAMC,OACvDf,YAAc,EACdK,QAAQW,UAAY,GACpBT,eAAeU,UAAUC,IAAI,UACR,KAAjBjB,aAIJkB,YAAYlB,aAAcD,aAHxBoB,SAASC,OAAOC,QAAQ,8B,CAM5B,SAASC,aACPJ,YAAYlB,eAAgBD,Y,CAG9B,SAASmB,YAAYK,EAAOC,GAC1BC,MACGC,IAAI5B,SAAU,CACb6B,OAAQ,CACNC,IAAK/B,QACLgC,EAAGN,EACHO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAMA,EACNS,SAAU,MAGbC,MAAK,SAAAC,GACJ,IAA4BC,EAAAD,EAASE,KAA7BC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UACM,IAAhBD,EAAKE,QAITC,cAAcH,GACD,IAATd,GACFL,SAASC,OAAOsB,QAAQ,oBAA8BC,OAAVJ,EAAU,aAEpDnC,QAAQwC,mBAAqBL,GAC/BjC,eAAeU,UAAUC,IAAI,UAC7BE,SAASC,OAAOyB,KAAK,+DAErBvC,eAAeU,UAAU8B,OAAO,WAXhC3B,SAASC,OAAO2B,QAAQ,2E,IAc3BC,OAAM,SAAAC,GACL9B,SAASC,OAAO2B,QAAQ,uDACxBG,QAAQD,MAAM,yBAA0BA,E,IAI9C,SAASR,cAAcU,GACrB,IAAMC,EAASD,EACZE,KAAI,SAAAC,GACH,MAAO,oBAEOX,OADHW,EAAMC,cAAc,6CACWZ,OAA5BW,EAAME,aAAa,WAEOb,OAFEW,EAAMG,KAAK,iGAGbd,OADAW,EAAMI,MAAM,sDAETf,OADHW,EAAMK,MAAM,yDAERhB,OADDW,EAAMM,SAAS,0DACEjB,OAAhBW,EAAMO,UAAU,mC,IAI7DC,KAAK,IACR1D,QAAQ2D,mBAAmB,YAAaX,GACvB,IAAIY,eAAe,aAAc,CAChDC,aAAc,MACdC,aAAc,MAEPC,UACTC,c,CAGF,SAASA,eACP,IAAQC,EAAuBnE,SAC5BG,cAAc,YACdiE,kBAAkBC,wBAFbC,OAIRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,U,CAvFd3E,WAAW4E,iBAAiB,SAAUtE,UACtCD,eAAeuE,iBAAiB,QAASvD","sources":["src/script.js"],"sourcesContent":["const API_KEY = '22910062-3497cb46ee95463a66c6aaf70';\nconst BASE_URL = 'https://pixabay.com/api/';\nlet currentPage = 1;\nlet currentQuery = '';\n\nconst searchForm = document.getElementById('search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreButton = document.querySelector('.load-more');\n\nsearchForm.addEventListener('submit', onSearch);\nloadMoreButton.addEventListener('click', onLoadMore);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  currentQuery = event.target.elements.searchQuery.value.trim();\n  currentPage = 1;\n  gallery.innerHTML = '';\n  loadMoreButton.classList.add('hidden');\n  if (currentQuery === '') {\n    Notiflix.Notify.warning('Please enter a search term.');\n    return;\n  }\n  fetchImages(currentQuery, currentPage);\n}\n\nfunction onLoadMore() {\n  fetchImages(currentQuery, ++currentPage);\n}\n\nfunction fetchImages(query, page) {\n  axios\n    .get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: page,\n        per_page: 10,\n      },\n    })\n    .then(response => {\n      const { hits, totalHits } = response.data;\n      if (hits.length === 0) {\n        Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n        return;\n      }\n      renderGallery(hits);\n      if (page === 1) {\n        Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n      }\n      if (gallery.childElementCount >= totalHits) {\n        loadMoreButton.classList.add('hidden');\n        Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n      } else {\n        loadMoreButton.classList.remove('hidden');\n      }\n    })\n    .catch(error => {\n      Notiflix.Notify.failure('Oops! Something went wrong! Try reloading the page.');\n      console.error('Error fetching images:', error);\n    });\n}\n\nfunction renderGallery(images) {\n  const markup = images\n    .map(image => {\n      return `\n      <a href=\"${image.largeImageURL}\" class=\"photo-card\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        <div class=\"info\">\n          <p class=\"info-item\"><b>Likes</b> ${image.likes}</p>\n          <p class=\"info-item\"><b>Views</b> ${image.views}</p>\n          <p class=\"info-item\"><b>Comments</b> ${image.comments}</p>\n          <p class=\"info-item\"><b>Downloads</b> ${image.downloads}</p>\n        </div>\n      </a>`;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', markup);\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n  lightbox.refresh();\n  smoothScroll();\n}\n\nfunction smoothScroll() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\n"],"names":["API_KEY","BASE_URL","currentPage","currentQuery","searchForm","document","getElementById","gallery","querySelector","loadMoreButton","onSearch","event","preventDefault","target","elements","searchQuery","value","trim","innerHTML","classList","add","fetchImages","Notiflix","Notify","warning","onLoadMore","query","page","axios","get","params","key","q","image_type","orientation","safesearch","per_page","then","response","_data","data","hits","totalHits","length","renderGallery","success","concat","childElementCount","info","remove","failure","catch","error","console","images","markup","map","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","SimpleLightbox","captionsData","captionDelay","refresh","smoothScroll","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","addEventListener"],"version":3,"file":"index.6e35b9a3.js.map"}